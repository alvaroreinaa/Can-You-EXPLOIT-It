const express = require('express');
const router = express.Router();
const mysql = require('mysql');
const mysql_user = "test";
const mysql_password = "test";

// Connect to database and use Exploits table
function connectDatabase() {
    const con = mysql.createConnection({
        host: "localhost",
        user: mysql_user,
        password: mysql_password,
        database: "Can_You_EXPLOIT_It"
    });

    con.connect(function(err) {
        if (err) throw err;
    })
  
    return con;
}

// Show the home page
router.get('/', async (req, res, next) => {
    try {
        res.status(200).render('index');
    } catch (err) {
        next(err);
    }
});

// Search the exploits 
router.post('/search', async (req, res, next) => {
    try {
        // Get data from the post
        var targetSoftware = req.body.targetSoftware;
        var affectedVersion = req.body.affectedVersion;
        var exploitType = req.body.exploitType;
        var exploitPlatform = req.body.exploitPlatform;
        var exploitPort = req.body.exploitPort;
        var exploitAuthor = req.body.exploitAuthor;
        var sellerLink = req.body.sellerLink;
        var testedOn = req.body.testedOn;
        var CVE = req.body.CVE;
        var parametersSearch = [{targetSoftware, affectedVersion, exploitType, exploitPlatform, exploitPort, exploitAuthor, sellerLink, testedOn, CVE}];
        
        // Connect to database
        const con = connectDatabase();

        // Build the query
        const generalQuery = "SELECT * FROM Exploits ";
        var softwareQuery = "WHERE Description LIKE '%" + targetSoftware + "%' AND "
        var typeQuery = "Type LIKE '%" + exploitType + "%' AND ";
        var platformQuery = "Platform LIKE '%" + exploitPlatform + "%' AND ";
        var portQuery = "Port LIKE '%" + exploitPort + "%' AND ";
        var authorQuery = "Author LIKE '%" + exploitAuthor + "%' AND ";
        var sellerQuery = "SellerLink LIKE '%" + sellerLink + "%' AND ";
        var testedQuery = "Tested LIKE '%" + testedOn + "%' AND ";
        var CVEQuery = "CVE LIKE '%" + CVE + "%' AND ";
        var versionDescriptionQuery =  "(Description LIKE '%" + affectedVersion + "%' OR ";
        var versionQuery = "Version LIKE '%" + affectedVersion + "%') ";
        var dateQuery = "ORDER BY Date DESC"
        var globalQuery = generalQuery + softwareQuery + typeQuery + platformQuery + portQuery + authorQuery + sellerQuery + testedQuery + CVEQuery + versionDescriptionQuery + versionQuery + dateQuery;

        // Execute the query
        con.query(globalQuery, function(err, results) {
            if (err) throw err;
            
            // Check Query lengths
            if (results.length === 0) {
                var isEmpty = true
            } else {
                var isEmpty = false
            }

            res.status(200).render('index', { parametersSearch: parametersSearch, results: results, isEmpty: isEmpty });
        });

    } catch (err) {
        next(err);
    }
});

// Update the Searchsploit tool
router.post('/update', async (req, res, next) => {
    try {  
        const { spawn } = require('child_process');
        spawn("python3", [
            "update_searchsploit.py",
            mysql_user,
            mysql_password
        ], {stdio: "inherit", shell: true});

        res.status(200).render('index', { isUpdating: true });
    } catch (err) {
        next(err);
    }
});

module.exports = router;
